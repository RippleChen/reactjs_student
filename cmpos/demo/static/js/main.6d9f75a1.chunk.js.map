{"version":3,"sources":["constants/index.js","utils/HttpClient.js","actions/login.action.js","components/layouts/Header.js","components/layouts/Menu.js","components/pages/LoginPage/LoginPage.js","actions/register.action.js","components/pages/RegisterPage/RegisterPage.js","components/pages/ShopPage/Styles.js","models/transaction.js","actions/shop.action.js","components/fragments/Payment/Payment.js","actions/stock.action.js","components/pages/ShopPage/ShopPage.js","components/fragments/StockCard/StockCard.js","components/pages/StockPage/StockPage.js","components/pages/StockCreatePage/StockCreatePage.js","components/pages/StockEditPage/StockEditPage.js","components/pages/ReportPage/ReportPage.js","actions/transaction.action.js","components/pages/TransactionPage/TransactionPage.js","App.js","reportWebVitals.js","reducers/login.reducer.js","reducers/register.reducer.js","reducers/stock.reducer.js","reducers/shop.reducer.js","reducers/transaction.reducer.js","reducers/index.js","index.js"],"names":["LOGIN_FETCHING","LOGIN_FAILED","LOGIN_SUCCESS","LOGOUT","REGISTER_FETCHING","REGISTER_SUCCESS","REGISTER_FAILED","STOCK_FETCHING","STOCK_SUCCESS","STOCK_FAILED","STOCK_CLEAR","TRANSACTION_FETCHING","TRANSACTION_SUCCESS","TRANSACTION_FAILED","SHOP_UPDATE_ORDER","SHOP_UPDATE_PAYMENT","apiUrl","imageUrl","server","isAbsoluteURLRegex","axios","interceptors","request","use","a","config","test","url","join","userToken","localStorage","getItem","headers","timeout","response","error","console","log","JSON","stringify","undefined","status","refreshToken","refreshUrl","post","result","token","data","jwt","setItem","removeItem","isCancel","Promise","reject","alert","code","message","httpClient","setLoginStatetoFailed","payload","type","logout","history","dispatch","push","isLoggedIn","decodedToken","decode","complete","dateNow","Date","exp","getTime","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","sectionDesktop","sectionMobile","grow","withRouter","props","classes","React","useState","anchorEl","setAnchorEl","useDispatch","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","loginActions","className","AppBar","position","clsx","IconButton","color","aria-label","handleDrawerOpen","edge","Typography","variant","noWrap","process","Badge","badgeContent","aria-controls","aria-haspopup","event","currentTarget","bannerOpen","backgroundImage","backgroundColor","isActive","Drawer","paper","handleDrawerClose","src","height","style","Divider","List","ListItem","component","NavLink","to","button","activeClassName","ListItemIcon","ListItemText","primary","maxWidth","marginTop","form","submit","margin","loginReducer","useSelector","Card","CardActionArea","CardMedia","alt","image","title","CardContent","gutterBottom","initialValues","username","password","onSubmit","values","value","setSubmitting","handleChange","handleSubmit","setFieldValue","isSubmitting","noValidate","TextField","required","fullWidth","label","onChange","autoComplete","autoFocus","name","isError","Alert","severity","marginBottom","Button","disabled","isFetching","CircularProgress","Grid","container","justify","Link","RouterLink","showForm","setRegisterStateToFailed","flexDirection","avatar","palette","secondary","main","registerReducer","goBack","cancel","age","account","star","orderList","flex","maxHeight","orderListItem","productContainer","paymentButton","leftLabel","rightLabel","TransactionRequest","subtotal","discount","shipping_cost","tax_percent","total","paid","change","order_list","payment_type","payment_detail","staff_id","seller_id","buyer_id","comment","doUpdateOrder","orderLines","totalPrice","item","price","qty","taxAmt","shopReducer","fontSize","field","isMustChanged","given","mTotalPrice","err","updateChange","onClickGiven","newValue","oldValue","newGiven","onClickSubmit","trans","order","getState","then","mOrderLines","isPaymentMade","InputLabelProps","shrink","InputProps","readOnly","startAdornment","InputAdornment","readonly","xs","onClickExact","setStateStockToSuccess","setStateStockToFetching","setStateStockToFailed","getProducts","doGetProducts","get","stockReducer","useEffect","stockActions","Paper","elevation","paddingTop","paddingBottom","mIsPaymentMade","Payment","Container","overflowY","map","i","index","indexOf","unshift","shopActions","cursor","alignitem","product_id","product","renderProductRows","mTaxAmt","displayType","decimalScale","thousandSeparator","prefix","fixedDecimalScale","mGiven","length","divider","alignContent","align","foundIndex","splice","StockCard","minHeight","subtitle","minWidth","icon","selectedRow","setSelectedRow","openDialog","setOpenDialog","selectedProduct","setSelectedProduct","columns","render","cellStyle","Math","random","borderRadius","stock","suffix","format","created","actions","iconProps","tooltip","rowData","handleDeleteConfirm","delete","handleClose","lg","md","AddShoppingCartIcon","NewReleasesIcon","AssignmentReturnIcon","StarIcon","onRowClick","evt","options","pageSize","rowStyle","tableData","components","Toolbar","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","card","showPreviewImage","file_obj","validate","errors","formData","FormData","append","file","e","preventDefault","target","files","URL","createObjectURL","click-type","multiple","accept","CardActions","raised","match","params","enableReinitialize","put","chartType","setChartType","chartData","setChartData","getRandomInt","randoms","floor","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","chartOption","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","callback","toString","replace","ButtonGroup","size","getTransactions","catch","setorderList","transactionReducer","transactionActions","transactionColumns","timestamp","parse","orderColumns","clickTransactionRow","search","paging","createMuiTheme","500","danger","App","setOpen","SecuredRoute","Component","rest","LoginRoute","LoginPage","basename","ThemeProvider","CssBaseline","path","RegisterPage","exact","StockPage","StockCreatePage","StockEditPage","ShopPage","ReportPage","TransactionPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","state","middlewares","applyMiddleware","thunk","logger","store","createStore","reducers","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d9f75a1.chunk.js","sourcesContent":["export const LOGIN_FETCHING = \"LOGIN_FETCHING\";\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\n\n// Register Page\nexport const REGISTER_FETCHING = \"REGISTER_FETCHING\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\n\n// Stock Page\nexport const STOCK_FETCHING = \"STOCK_FETCHING\";\nexport const STOCK_SUCCESS = \"STOCK_SUCCESS\";\nexport const STOCK_FAILED = \"STOCK_FAILED\";\nexport const STOCK_CLEAR = \"STOCK_CLEAR\";\n\n// Stock Edit Page\nexport const STOCK_EDIT_FETCHING = \"STOCK_EDIT_FETCHING\";\nexport const STOCK_EDIT_SUCCESS = \"STOCK_EDIT_SUCCESS\";\nexport const STOCK_EDIT_FAILED = \"STOCK_EDIT_FAILED\";\nexport const STOCK_EDIT_INITIALED = \"STOCK_EDIT_INITIALED\";\n\n// Transaction Edit Page\nexport const TRANSACTION_FETCHING = \"TRANSACTION_FETCHING\";\nexport const TRANSACTION_SUCCESS = \"TRANSACTION_SUCCESS\";\nexport const TRANSACTION_FAILED = \"TRANSACTION_FAILED\";\n\n// Shop Page\nexport const SHOP_FETCHING = \"SHOP_FETCHING\";\nexport const SHOP_SUCCESS = \"SHOP_SUCCESS\";\nexport const SHOP_FAILED = \"SHOP_FAILED\";\n\nexport const SHOP_UPDATE_ORDER = \"SHOP_UPDATE_ORDER\";\nexport const SHOP_UPDATE_PAYMENT = \"SHOP_UPDATE_PAYMENT\";\n\n// Error Code\nexport const E_PICKER_CANCELLED = \"E_PICKER_CANCELLED\";\nexport const E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR =\n  \"E_PICKER_CANNOT_RUN_CAMERA_ON_SIMULATOR\";\nexport const E_PERMISSION_MISSING = \"E_PERMISSION_MISSING\";\nexport const E_PICKER_NO_CAMERA_PERMISSION = \"E_PICKER_NO_CAMERA_PERMISSION\";\nexport const E_USER_CANCELLED = \"E_USER_CANCELLED\";\nexport const E_UNKNOWN = \"E_UNKNOWN\";\nexport const E_DEVELOPER_ERROR = \"E_DEVELOPER_ERROR\";\nexport const TIMEOUT_NETWORK = \"ECONNABORTED\"; // request service timeout\nexport const NOT_CONNECT_NETWORK = \"NOT_CONNECT_NETWORK\";\n\n//////////////// Localization Begin ////////////////\nexport const NETWORK_CONNECTION_MESSAGE =\n  \"Cannot connect to server, Please try again.\";\nexport const NETWORK_TIMEOUT_MESSAGE =\n  \"A network timeout has occurred, Please try again.\";\nexport const UPLOAD_PHOTO_FAIL_MESSAGE =\n  \"An error has occurred. The photo was unable to upload.\";\n\nexport const apiUrl = \"http://localhost:8081/api/v2\";\nexport const imageUrl = \"http://localhost:8081\";\n\nexport const server = {\n  LOGIN_URL: `login`,\n  REFRESH_TOKEN_URL: `refresh/token`,\n  REGISTER_URL: `register`,\n  PRODUCT_URL: `product`,\n  TRANSACTION_URL: `transaction`,\n  REPORT_URL: `report`,\n  TOKEN_KEY: `token`,\n  REFRESH_TOKEN_KEY: `refresh_token`,\n};\n","import axios from \"axios\";\nimport join from \"url-join\";\nimport {\n  server,\n  apiUrl,\n  NOT_CONNECT_NETWORK,\n  NETWORK_CONNECTION_MESSAGE\n} from \"../constants\";\n\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\n\naxios.interceptors.request.use(async config => {\n  if (!isAbsoluteURLRegex.test(config.url)) {\n    config.url = join(apiUrl, config.url);\n  }\n\n  const userToken = localStorage.getItem(server.TOKEN_KEY);\n  if (userToken) {\n    config.headers = { \"x-access-token\": userToken };\n  }\n  config.timeout = 10000; // 10 Second\n  return config;\n});\n\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  async error => {\n    debugger;\n    console.log(JSON.stringify(error, undefined, 2));\n    if (error.response.status == \"401\") {\n      const refreshToken = localStorage.getItem(server.REFRESH_TOKEN_KEY);\n      const refreshUrl = `${apiUrl}/${server.REFRESH_TOKEN_URL}`;\n      let result = await axios.post(refreshUrl, { refreshToken });\n\n      const token = result.data.jwt;\n      localStorage.setItem(server.TOKEN_KEY, token);\n      return axios.request(error.config);\n    } else if (error.response.status == \"403\") {\n      // force logout\n      localStorage.removeItem(server.TOKEN_KEY);\n      localStorage.removeItem(server.REFRESH_TOKEN_KEY);\n    }\n\n    if (axios.isCancel(error)) {\n      return Promise.reject(error);\n    } else if (!error.response) {\n      alert(JSON.stringify(error));\n      return Promise.reject({\n        code: NOT_CONNECT_NETWORK,\n        message: NETWORK_CONNECTION_MESSAGE\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const httpClient = axios;\n","import {\n  LOGIN_FETCHING,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n  LOGOUT,\n  server,\n} from \"../constants\";\nimport { httpClient } from \"./../utils/HttpClient\";\nimport jwt from \"jsonwebtoken\";\n\nexport const setLoginStateToFetch = () => ({\n  type: LOGIN_FETCHING,\n});\n\nexport const setLoginStateToSuccess = (payload) => ({\n  type: LOGIN_SUCCESS,\n  payload,\n});\n\nexport const setLoginStatetoFailed = (payload) => ({\n  type: LOGIN_FAILED,\n  payload,\n});\n\nexport const setLoginStateToLogout = () => ({\n  type: LOGOUT,\n});\n\nexport const login = (value, history) => {\n  return async (dispatch) => {\n    dispatch(setLoginStateToFetch());\n\n    const result = await httpClient.post(server.LOGIN_URL, value);\n    if (result.data.result == \"ok\") {\n      // backup token\n      const { token, refreshToken } = result.data;\n      localStorage.setItem(server.TOKEN_KEY, token);\n      localStorage.setItem(server.REFRESH_TOKEN_KEY, refreshToken);\n\n      dispatch(setLoginStateToSuccess(\"Login successfully\"));\n      history.push(\"/stock\");\n    } else {\n      dispatch(setLoginStatetoFailed(\"Login failed\"));\n    }\n  };\n};\n\nexport const logout = (history) => {\n  return (dispatch) => {\n    localStorage.removeItem(server.TOKEN_KEY);\n    localStorage.removeItem(server.REFRESH_TOKEN_KEY);\n    dispatch(setLoginStateToLogout());\n    history.push(\"/login\");\n  };\n};\n\nexport const isLoggedIn = () => {\n  let token = localStorage.getItem(server.TOKEN_KEY);\n  if (token) {\n    var decodedToken = jwt.decode(token, { complete: true });\n    var dateNow = new Date();\n\n    if (decodedToken.exp < dateNow.getTime()) {\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport * as loginActions from \"./../../actions/login.action\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useDispatch } from \"react-redux\";\n\nimport { withRouter } from \"react-router-dom\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n  const isMenuOpen = Boolean(anchorEl);\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const logout = () => {\n    dispatch(loginActions.logout(props.history));\n    handleMenuClose();\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={logout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: props.open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: props.open && classes.hide,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            React / NodeJS / Express / MongoDB Workshop\n            <Typography variant=\"body1\">\n              {\" \"}\n              By CodeMobiles {process.env.REACT_APP_VERSION}\n            </Typography>\n          </Typography>\n\n          <div className={classes.grow} />\n\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={(event) => setAnchorEl(event.currentTarget)}\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMenu}\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ShopIcon from \"@material-ui/icons/Shop\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport { NavLink } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7),\n  },\n  bannerOpen: {\n    backgroundImage: \"url(\" + \"/images/background_menu.jpg\" + \")\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#1E88E5\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  isActive: {\n    backgroundColor: \"#e0f5fd\",\n    color: \"#0080ff\",\n  },\n}));\n\nexport default (props) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx({\n        [classes.drawerOpen]: props.open,\n        [classes.drawerClose]: !props.open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: props.open,\n          [classes.bannerOpen]: props.open,\n          [classes.drawerClose]: !props.open,\n        }),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={props.handleDrawerClose}>\n          <img\n            src={`${process.env.PUBLIC_URL}/images/logo_white.png`}\n            height=\"30\"\n          />\n          <ChevronLeftIcon style={{ color: \"white\" }} />\n        </IconButton>\n      </div>\n      {props.open && (\n        <img\n          height={250}\n          src={`${process.env.PUBLIC_URL}/images/menu_banner.jpg`}\n        />\n      )}\n      <Divider />\n\n      <List>\n        {/* Shop */}\n        <ListItem\n          component={NavLink}\n          to=\"/shop\"\n          button\n          key=\"shop\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <ShopIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Shop\" />\n        </ListItem>\n\n        {/* Stock */}\n        <ListItem\n          component={NavLink}\n          to=\"/stock\"\n          button\n          key=\"stock\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <LayersIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Stock\" />\n        </ListItem>\n\n        {/* Report */}\n        <ListItem\n          component={NavLink}\n          to=\"/report\"\n          button\n          key=\"report\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <BarChartIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Report\" />\n        </ListItem>\n\n        {/* Transaction */}\n        <ListItem\n          component={NavLink}\n          to=\"/transaction\"\n          button\n          key=\"transaction\"\n          activeClassName={classes.isActive}\n        >\n          <ListItemIcon>\n            <AttachMoneyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Transaction\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Formik } from \"formik\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as loginActions from \"./../../../actions/login.action\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { CardActionArea } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    marginTop: 80,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const loginReducer = useSelector(({ loginReducer }) => loginReducer);\n\n  // useEffect(() => {\n  //   loginActions.isLoggedIn() && props.history.push(\"/stock\");\n  // }, []);\n\n  const showForm = ({\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting,\n  }) => {\n    return (\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          onChange={handleChange}\n          value={values.password}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n\n        {loginReducer.isError && (\n          <Alert severity=\"error\" style={{ marginBottom: 8 }}>\n            Invalid account!\n          </Alert>\n        )}\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loginReducer.isFetching}\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n        {loginReducer.isFetching && <CircularProgress style={{ marginTop: 10 }} />}\n        <Grid container justify=\"flex-end\">\n          <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n            Don't have an account? Register\n          </Link>\n        </Grid>\n      </form>\n    );\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"200\"\n          image={`${process.env.PUBLIC_URL}/images/authen_header.jpg`}\n          title=\"Contemplative Reptile\"\n        />\n      </CardActionArea>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Login\n        </Typography>\n        <Formik\n          initialValues={{ username: \"\", password: \"\" }}\n          onSubmit={(values, { setSubmitting }) => {\n            dispatch(loginActions.login(values, props.history));\n          }}\n        >\n          {(props) => showForm(props)}\n        </Formik>\n      </CardContent>\n    </Card>\n  );\n};\n","import {\n  REGISTER_FETCHING,\n  REGISTER_SUCCESS,\n  REGISTER_FAILED,\n} from \"../constants\";\n\nimport axios from \"axios\";\n\nexport const setRegisterStateToFetch = () => ({\n  type: REGISTER_FETCHING,\n});\n\nexport const setRegisterStateToSuccess = (payload) => ({\n  type: REGISTER_SUCCESS,\n  payload,\n});\n\nexport const setRegisterStateToFailed = (payload) => ({\n  type: REGISTER_FAILED,\n  payload,\n});\n\nexport const register = (account, history) => {\n  return async (dispatch) => {\n    try {\n      dispatch(setRegisterStateToFetch());\n      const result = await axios.post(\n        \"http://localhost:8081/api/v2/register\",\n        account\n      );\n\n      if (result.data.result == \"ok\") {\n        dispatch(setRegisterStateToSuccess(\"Register successfully\"));\n        history.push(\"/login\");\n      } else {\n        dispatch(setRegisterStateToFailed(\"Invalid username or password\"));\n      }\n    } catch (e) {\n      dispatch(setRegisterStateToFailed(\"Internal error\"));\n    }\n  };\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Formik } from \"formik\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as registerActions from \"./../../../actions/register.action\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  // const registerReducer = useSelector(state => state.registerReducer)\n  const registerReducer = useSelector(({ registerReducer }) => registerReducer);\n\n  const showForm = ({\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting,\n  }) => {\n    return (\n      <form className={classes.form} noValidate onSubmit={handleSubmit}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          onChange={handleChange}\n          value={values.username}\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          onChange={handleChange}\n          value={values.password}\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          disabled={registerReducer.isFetching}\n        >\n          Create\n        </Button>\n        <Button\n          onClick={() => props.history.goBack()}\n          type=\"button\"\n          fullWidth\n          variant=\"contained\"\n          color=\"default\"\n          className={classes.cancel}\n        >\n          Cancel\n        </Button>\n      </form>\n    );\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Register\n        </Typography>\n        <Formik\n          initialValues={{ username: \"\", password: \"\", age: 100 }}\n          onSubmit={(values, { setSubmitting }) => {\n            dispatch(registerActions.register(values, props.history));\n          }}\n        >\n          {(props) => showForm(props)}\n        </Formik>\n\n        {registerReducer.isError && (\n          <Alert style={{ marginTop: 10 }} severity=\"error\">\n            {registerReducer.result}\n          </Alert>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: 55,\n  },\n  star: {\n    color: \"red\",\n  },\n  orderList: {\n    overflowX: \"hidden\",\n    height: 490,\n    flex: 1,\n    width: \"100%\",\n    maxHeight: 490,\n  },\n  orderListItem: {\n    height: 100,\n    maxHeight: 100,\n  },\n  productContainer: {\n    height: 720,\n  },\n  paymentButton: {\n    height: 95,\n    marginTop: 24,\n  },\n  leftLabel: {\n    marginLeft: 20,\n  },\n  rightLabel: {\n    marginRight: 20,\n  },\n}));\n","export class TransactionRequest {\n    subtotal = 0;\n    discount = 0;\n    shipping_cost = 0;\n    tax_percent = 0;\n    total = 0;\n    paid = 0;\n    change = 0;\n    order_list = \"x\";\n    payment_type = \"x\";\n    payment_detail = \"x\";\n    staff_id = \"x\";\n    seller_id = \"x\";\n    buyer_id = \"x\";\n    comment = \"x\";\n}","import { httpClient } from \"./../utils/HttpClient\";\n\nimport { SHOP_UPDATE_ORDER, SHOP_UPDATE_PAYMENT, server } from \"../constants\";\n\nconst setStateShoptoUpdateOrder = (payload) => ({\n  type: SHOP_UPDATE_ORDER,\n  payload: payload,\n});\n\nconst doUpdateOrder = (dispatch, orderLines) => {\n  let totalPrice = 0;\n  let taxAmt = 0;\n  for (let item of orderLines) {\n    totalPrice += item.price * item.qty;\n  }\n  taxAmt = totalPrice * 0.07;\n\n  dispatch(\n    setStateShoptoUpdateOrder({\n      orderLines,\n      totalPrice,\n      taxAmt,\n    })\n  );\n};\n\nexport const addOrder = (item) => {\n  return (dispatch, getState) => {\n    let orderLines = getState().shopReducer.mOrderLines;\n    let index = orderLines.indexOf(item);\n    if (index === -1) {\n      item.qty = 1;\n      orderLines.unshift(item);\n    } else {\n      orderLines[index].qty++;\n    }\n\n    doUpdateOrder(dispatch, orderLines);\n  };\n};\n\nexport const removeOrder = (product) => {\n  return (dispatch, getState) => {\n    let orderLines = getState().shopReducer.mOrderLines;\n    var foundIndex = orderLines.indexOf(product);\n\n    orderLines.map((item) => {\n      if (item.product_id === product.product_id) {\n        item.qty = 1;\n      }\n    });\n    orderLines.splice(foundIndex, 1);\n\n    doUpdateOrder(dispatch, orderLines);\n  };\n};\n\nexport const submitPayment = (data) => {\n  return (dispatch, getState) => {\n    httpClient.post(server.TRANSACTION_URL, data).then(() => {\n      // Clear payment\n      getState().shopReducer.mOrderLines = [];\n      dispatch({\n        type: SHOP_UPDATE_PAYMENT,\n        payload: {\n          isPaymentMade: false,\n          given: 0,\n        },\n      });\n    });\n  };\n};\n\nexport const togglePaymentState = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: SHOP_UPDATE_PAYMENT,\n      payload: {\n        isPaymentMade: !getState().shopReducer.mIsPaymentMade,\n        given: !getState().shopReducer.mGiven,\n      },\n    });\n  };\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TransactionRequest } from \"./../../../models/transaction\";\nimport * as shopActions from \"./../../../actions/shop.action\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default (props) => {\n  const shopReducer = useSelector(({ shopReducer }) => shopReducer);\n  const dispatch = useDispatch();\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      padding: 30,\n    },\n    button: {\n      height: 100,\n      fontSize: 20,\n    },\n    field: {\n      marginTop: 16,\n    },\n  }));\n\n  const classes = useStyles();\n\n  const isMustChanged = (values) => {\n    try {\n      return values.given > shopReducer.mTotalPrice;\n    } catch (err) {\n      return false;\n    }\n  };\n\n  const updateChange = (given, setFieldValue) => {\n    let change = given - shopReducer.mTotalPrice;\n    if (change > 0) {\n      setFieldValue(\"change\", change);\n    } else {\n      setFieldValue(\"change\", 0);\n    }\n  };\n\n  const onClickGiven = (newValue, oldValue, setFieldValue) => {\n    const newGiven = newValue + oldValue;\n    setFieldValue(\"given\", newGiven);\n    updateChange(newGiven, setFieldValue);\n  };\n\n  const onClickExact = (setFieldValue) => {\n    setFieldValue(\"given\", shopReducer.mTotalPrice);\n    updateChange(0, setFieldValue);\n  };\n\n  const onClickSubmit = (values) => {\n    let trans = new TransactionRequest();\n    trans.total = shopReducer.mTotalPrice;\n    trans.paid = values.given;\n    trans.change = values.change;\n    trans.payment_type = \"cash\";\n    trans.payment_detail = \"full\";\n    trans.seller_id = \"sr0001\";\n    trans.buyer_id = \"by0000\";\n    trans.order_list = props.order;\n    dispatch(shopActions.submitPayment(trans));\n  };\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        {isMustChanged(values) && (\n          <Field\n            variant=\"outlined\"\n            className={classes.field}\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            component={TextField}\n            name=\"change\"\n            type=\"text\"\n            label=\"Change\"\n            InputProps={{\n              style: { fontSize: 35 },\n              readOnly: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">THB</InputAdornment>\n              ),\n            }}\n          />\n        )}\n\n        <Field\n          readonly\n          variant=\"outlined\"\n          className={classes.field}\n          fullWidth\n          component={TextField}\n          name=\"given\"\n          type=\"text\"\n          label=\"Given\"\n          InputProps={{\n            style: { fontSize: 35, color: \"green\" },\n            readOnly: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">THB</InputAdornment>\n            ),\n          }}\n        />\n\n        <div style={{ marginTop: 32 }}>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(1000, values.given, setFieldValue)}\n              >\n                ฿1,000\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(500, values.given, setFieldValue)}\n              >\n                ฿500\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(100, values.given, setFieldValue)}\n              >\n                ฿100\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(50, values.given, setFieldValue)}\n              >\n                ฿50\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(20, values.given, setFieldValue)}\n              >\n                ฿20\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickGiven(10, values.given, setFieldValue)}\n              >\n                ฿10\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" spacing={2}>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"danger\"\n                onClick={() => setFieldValue(\"given\", 0)}\n              >\n                CLR\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onClickExact(setFieldValue)}\n              >\n                EXACT\n              </Button>\n            </Grid>\n            <Grid item xs>\n              <Button\n                className={classes.button}\n                fullWidth\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => onClickSubmit(values)}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </Form>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Formik initialValues={{ given: 0 }}>{(props) => showForm(props)}</Formik>\n    </div>\n  );\n};\n","import { httpClient } from \"./../utils/HttpClient\";\nimport {\n  STOCK_SUCCESS,\n  STOCK_FETCHING,\n  STOCK_FAILED,\n  server,\n  STOCK_CLEAR\n} from \"../constants\";\n\nexport const setStateStockToSuccess = payload => ({\n  type: STOCK_SUCCESS,\n  payload\n});\n\nconst setStateStockToFetching = () => ({\n  type: STOCK_FETCHING\n});\n\nconst setStateStockToFailed = () => ({\n  type: STOCK_FAILED\n});\n\nconst setStateStockToClear = () => ({\n  type: STOCK_CLEAR\n});\n\nexport const clearProduct = () => {\n  return dispatch => {\n    dispatch(setStateStockToClear());\n  };\n};\n\nexport const getProducts = () => {\n  return dispatch => {\n    dispatch(setStateStockToFetching());\n    doGetProducts(dispatch);\n  };\n};\n\nexport const addProduct = (formData, history) => {\n  return async dispatch => {\n    await httpClient.post(server.PRODUCT_URL, formData);\n    history.goBack();\n  };\n};\n\nexport const updateProduct = (formData, history) => {\n  return async dispatch => {\n    await httpClient.put(server.PRODUCT_URL, formData);\n    history.goBack();\n  };\n};\n\nexport const getProductById = id => {\n  return async dispatch => {\n    try {\n      dispatch(setStateStockToFetching());\n      let result = await httpClient.get(`${server.PRODUCT_URL}/id/${id}`);\n      dispatch(setStateStockToSuccess(result.data));\n    } catch (error) {\n      alert(JSON.stringify(error));\n      dispatch(setStateStockToFailed());\n    }\n  };\n};\n\nexport const deleteProduct = id => {\n  return async dispatch => {\n    dispatch(setStateStockToFetching());\n    await httpClient.delete(`${server.PRODUCT_URL}/id/${id}`);\n    await doGetProducts(dispatch);\n  };\n};\n\nexport const getProductByKeyword = event => {\n  return async dispatch => {\n    var keyword = event.target.value;\n    dispatch(setStateStockToFetching());\n\n    if (keyword !== null && keyword !== \"\") {\n      let result = await httpClient.get(\n        `${server.PRODUCT_URL}/name/${keyword}`\n      );\n      dispatch(setStateStockToSuccess(result.data));\n    } else {\n      doGetProducts(dispatch);\n    }\n  };\n};\n\nconst doGetProducts = async dispatch => {\n  try {\n    let result = await httpClient.get(server.PRODUCT_URL);\n    dispatch(setStateStockToSuccess(result.data));\n  } catch (err) {\n    // alert(JSON.stringify(err));\n    dispatch(setStateStockToFailed());\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useStyles from \"./Styles\";\nimport Payment from \"./../../fragments/Payment/Payment\";\nimport * as stockActions from \"./../../../actions/stock.action\";\nimport * as shopActions from \"./../../../actions/shop.action\";\nimport { imageUrl } from \"./../../../constants\";\nimport NumberFormat from \"react-number-format\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default (props) => {\n  const shopReducer = useSelector(({ shopReducer }) => shopReducer);\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const renderPayment = () => {\n    return (\n      <div className=\"col-md-8\" style={{ maxHeight: 710 }}>\n        <Payment order={JSON.stringify(shopReducer.mOrderLines)} />\n      </div>\n    );\n  };\n\n  const isSelectedItem = (product) => {\n    let index = shopReducer.mOrderLines.indexOf(product);\n    return index !== -1;\n  };\n\n  const renderOrderRows = () => {\n    const { mOrderLines } = shopReducer;\n\n    return mOrderLines.map((item) => (\n      <ListItem button divider className={classes.orderListItem}>\n        <Grid container key={item.product_id} spacing={1}>\n          {/* Image Order  */}\n          <Grid item xs={2}>\n            <img\n              alt=\"to be done\"\n              src={`${imageUrl}/images/${item.image}`}\n              style={{ height: 90, width: 90 }}\n            />\n          </Grid>\n          {/* Name Order  */}\n          <Grid item xs={8} alignitem=\"center\">\n            <Typography\n              color=\"textSecondary\"\n              component=\"p\"\n              style={{ maxHeight: 50, marginLeft: 32 }}\n            >\n              {item.name}\n            </Typography>\n          </Grid>\n          {/* Price and Qty Order  */}\n          <Grid item xs={2} alignContent=\"center\">\n            <Typography align=\"right\" color=\"textPrimary\">\n              <NumberFormat\n                value={item.price}\n                displayType={\"text\"}\n                thousandSeparator={true}\n                decimalScale={2}\n                fixedDecimalScale={true}\n                prefix={\"฿\"}\n              />\n              <br />X {item.qty}.\n              <br />\n              <DeleteOutlineIcon\n                onClick={() => dispatch(shopActions.removeOrder(item))}\n              />\n            </Typography>\n          </Grid>\n        </Grid>\n      </ListItem>\n    ));\n  };\n\n  const renderProductRows = () => {\n    const { result } = stockReducer;\n    return (\n      <Container style={{ height: \"100%\", overflowY: \"scroll\" }}>\n        <Grid container spacing={1} className={classes.productContainer}>\n          {result !== null &&\n            result.map((item, i) => (\n              <Grid\n                key={i}\n                item\n                xs={3}\n                onClick={() => dispatch(shopActions.addOrder(item))}\n                style={{ cursor: \"pointer\" }}\n              >\n                <Card>\n                  <CardActionArea>\n                    <CardMedia\n                      component=\"img\"\n                      alt=\"Contemplative Reptile\"\n                      height=\"200\"\n                      image={`${imageUrl}/images/${item.image}`}\n                      title=\"Contemplative Reptile\"\n                    />\n                    <CardContent>\n                      <Typography noWrap gutterBottom>\n                        {item.name}\n                      </Typography>\n                      <Grid\n                        container\n                        style={{\n                          height: 24,\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          alignitem: \"center\",\n                        }}\n                      >\n                        <div style={{ flexGrow: 1 }}>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                          >\n                            D{item.product_id} / ฿{item.price}\n                          </Typography>\n                        </div>\n                        {isSelectedItem(item) && (\n                          <div\n                            style={{ display: \"flex\", flexDirection: \"row\" }}\n                          >\n                            <Typography\n                              style={{ marginRight: 4 }}\n                              variant=\"body1\"\n                              color=\"textPrimary\"\n                            >\n                              X{item.qty}\n                            </Typography>\n\n                            <StarsIcon className={classes.star} />\n                          </div>\n                        )}\n                      </Grid>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))}\n        </Grid>\n      </Container>\n    );\n  };\n\n  useEffect(() => {\n    dispatch(stockActions.getProducts());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        {/* Left section */}\n        <Grid item xs={8}>\n          <Paper\n            elevation={1}\n            style={{\n              paddingTop: 24,\n              paddingBottom: 24,\n              backgroundColor: \"#e0f5fd\",\n            }}\n          >\n            {shopReducer.mIsPaymentMade ? renderPayment() : renderProductRows()}\n          </Paper>\n        </Grid>\n\n        {/* Right section */}\n        <Grid item xs={4}>\n          <div\n            style={{\n              maxWidth: \"100%\",\n            }}\n          >\n            <Paper style={{ paddingTop: 16, marginTop: 8 }} elevation={1}>\n              {/* Tax section */}\n              <Grid\n                container\n                justify=\"space-between\"\n                style={{ marginBottom: 24 }}\n              >\n                <Typography variant=\"h4\" className={classes.leftLabel}>\n                  Tax 7%\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  color=\"primary\"\n                  className={classes.rightLabel}\n                >\n                  <NumberFormat\n                    value={shopReducer.mTaxAmt}\n                    displayType={\"text\"}\n                    decimalScale={2}\n                    thousandSeparator={true}\n                    prefix={\"฿\"}\n                  />\n                </Typography>\n              </Grid>\n\n              {/* Total section */}\n              <Grid container justify=\"space-between\">\n                <Typography variant=\"h4\" className={classes.leftLabel}>\n                  Total\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  color=\"primary\"\n                  className={classes.rightLabel}\n                >\n                  <NumberFormat\n                    value={shopReducer.mTotalPrice}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                    decimalScale={2}\n                    fixedDecimalScale={true}\n                    prefix={\"฿\"}\n                  />\n                </Typography>\n              </Grid>\n\n              {shopReducer.mTotalPrice > 0 && !shopReducer.mIsPaymentMade && (\n                <Button\n                  className={classes.paymentButton}\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => dispatch(shopActions.togglePaymentState())}\n                >\n                  <Typography variant=\"h4\">Payment</Typography>\n                </Button>\n              )}\n            </Paper>\n\n            <Paper\n              elevation={1}\n              style={{\n                height: 490,\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              {shopReducer.mOrderLines.length > 0 ? (\n                <List\n                  component=\"nav\"\n                  className={classes.orderList}\n                  aria-label=\"mailbox folders\"\n                >\n                  {renderOrderRows()}\n                </List>\n              ) : (\n                <img\n                  src={`${process.env.PUBLIC_URL}/images/waiting_for_sale.png`}\n                  style={{ height: 300, width: 300 }}\n                />\n              )}\n            </Paper>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst StockCard = (props) => {\n  return (\n    <Card>\n      <Grid container style={{ minHeight: 70 }}>\n        <Grid item style={{ flexGrow: 1, padding: 24 }}>\n          <Typography variant=\"h4\" color=\"textPrimary\">\n            {props.title}\n          </Typography>\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            {props.subtitle}\n          </Typography>\n        </Grid>\n\n        <Grid\n          item\n          style={{\n            backgroundColor: props.color,\n            color: \"white\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            minWidth: 70,\n          }}\n        >\n          <props.icon fontSize=\"large\" />\n          {/* {React.createElement(props.icon, { fontSize: \"large\" })} */}\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default StockCard;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { imageUrl } from \"./../../../constants\";\nimport * as stockActions from \"./../../../actions/stock.action\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport NumberFormat from \"react-number-format\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport StockCard from \"./../../fragments/StockCard/StockCard\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\nimport AssignmentReturnIcon from \"@material-ui/icons/AssignmentReturn\";\nimport StarIcon from \"@material-ui/icons/Star\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: 60,\n  },\n}));\n\nexport default (props) => {\n  const classes = useStyles();\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n  const dispatch = useDispatch();\n\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  useEffect(() => {\n    dispatch(stockActions.getProducts());\n  }, []);\n\n  const columns = [\n    {\n      title: \"ID\",\n      field: \"product_id\",\n      render: (item) => (\n        <Typography variant=\"body1\">{item.product_id}</Typography>\n      ),\n    },\n    {\n      title: \"IMAGE\",\n      field: \"image\",\n      cellStyle: { padding: 0 },\n      render: (item) => (\n        <img\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\n          style={{ width: 70, height: 70, borderRadius: \"5%\" }}\n        />\n      ),\n    },\n    {\n      title: \"NAME\",\n      field: \"name\",\n      cellStyle: { minWidth: 700 },\n      render: (item) => <Typography variant=\"body1\">{item.name}</Typography>,\n    },\n    {\n      title: \"PRICE\",\n      field: \"price\",\n      render: (item) => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={2}\n            fixedDecimalScale={true}\n            prefix={\"฿\"}\n          />\n        </Typography>\n      ),\n    },\n    {\n      title: \"STOCK\",\n      field: \"stock\",\n      render: (item) => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.stock}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={0}\n            fixedDecimalScale={true}\n            suffix={\" pcs\"}\n          />\n        </Typography>\n      ),\n    },\n    {\n      title: \"CREATED\",\n      field: \"created\",\n      render: (item) => (\n        <Typography>\n          <Moment format=\"DD/MM/YYYY\">{item.created}</Moment>\n        </Typography>\n      ),\n    },\n  ];\n\n  const actions = [\n    {\n      icon: \"edit\",\n      iconProps: { color: \"primary\" },\n      tooltip: \"Edit\",\n      onClick: (event, rowData) =>\n        props.history.push(\"/stock/edit/\" + rowData.product_id),\n    },\n    {\n      icon: \"delete\",\n      iconProps: { color: \"action\" },\n      tooltip: \"Delete\",\n      onClick: (event, rowData) => {\n        setSelectedProduct(rowData);\n        setOpenDialog(true);\n      },\n    },\n  ];\n\n  const handleDeleteConfirm = () => {\n    dispatch(stockActions.deleteProduct(selectedProduct.product_id));\n    dispatch(stockActions.getProducts());\n    setOpenDialog(false);\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const showDialog = () => {\n    if (selectedProduct === null) {\n      return \"\";\n    }\n\n    return (\n      <Dialog\n        open={openDialog}\n        keepMounted\n        onClose={() => {}}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          <img\n            src={`${imageUrl}/images/${\n              selectedProduct.image\n            }?dummy=${Math.random()}`}\n            style={{ width: 100, borderRadius: \"5%\" }}\n          />\n          <br />\n          Confirm to delete the product? : {\" \" + selectedProduct.name}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            You cannot restore deleted product.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleDeleteConfirm} color=\"primary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* Summary Icons */}\n\n      {\n        <Grid container style={{ marginBottom: 16 }} spacing={5}>\n          <Grid item lg={3} md={6}>\n            <StockCard\n              icon={AddShoppingCartIcon}\n              title=\"TOTAL\"\n              subtitle=\"112 THB\"\n              color=\"#00a65a\"\n            />\n          </Grid>\n\n          <Grid item lg={3} md={6}>\n            <StockCard\n              icon={NewReleasesIcon}\n              title=\"EMPTY\"\n              subtitle=\"9 PCS.\"\n              color=\"#f39c12\"\n            />\n          </Grid>\n\n          <Grid item lg={3} md={6}>\n            <StockCard\n              icon={AssignmentReturnIcon}\n              title=\"RETURN\"\n              subtitle=\"1 PCS.\"\n              color=\"#dd4b39\"\n            />\n          </Grid>\n\n          <Grid item lg={3} md={6}>\n            <StockCard\n              icon={StarIcon}\n              title=\"DISCOUNT\"\n              subtitle=\"5 PCS.\"\n              color=\"#00c0ef\"\n            />\n          </Grid>\n        </Grid>\n      }\n\n      <MaterialTable\n        id=\"root_stock\"\n        title=\"Stock\"\n        columns={columns}\n        actions={actions}\n        data={stockReducer.result ? stockReducer.result : []}\n        onRowClick={(evt, selectedRow) => setSelectedRow(selectedRow)}\n        options={{\n          pageSize: 5,\n          rowStyle: (rowData) => ({\n            backgroundColor:\n              selectedRow && selectedRow.tableData.id === rowData.tableData.id\n                ? \"#EEE\"\n                : \"#FFF\",\n          }),\n        }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <MTableToolbar {...props} />\n              <div style={{ padding: \"0px 10px\" }}>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  component={Link}\n                  to=\"/stock/create\"\n                >\n                  Create\n                </Button>\n              </div>\n            </div>\n          ),\n        }}\n      />\n\n      {showDialog()}\n    </div>\n  );\n};\n","import * as stockActions from \"./../../../actions/stock.action\";\n\nimport React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport { TextField } from \"formik-material-ui\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"80%\",\n    marginTop: 100,\n  },\n  field: {\n    marginTop: 16,\n  },\n  card: {\n    padding: 20,\n  },\n}));\n\nexport default (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h3\">\n              Create Stock\n            </Typography>\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Name\"\n            />\n            <br />\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"price\"\n              type=\"number\"\n              label=\"Price\"\n            />\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"stock\"\n              type=\"number\"\n              label=\"Stock\"\n            />\n\n            <div>{showPreviewImage(values)}</div>\n\n            <div className={classes.field}>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\n                style={{ width: 25, height: 20 }}\n              />\n              <span style={{ color: \"#00B0CD\", marginLeft: 10 }}>\n                Add Picture\n              </span>\n              <input\n                type=\"file\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\n                  setFieldValue(\n                    \"file_obj\",\n                    URL.createObjectURL(e.target.files[0])\n                  ); // for preview image\n                }}\n                name=\"image\"\n                click-type=\"type1\"\n                className=\"picupload\"\n                multiple\n                accept=\"image/*\"\n                id=\"files\"\n                style={{ padding: \"20px 0\" }}\n              />\n            </div>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Create\n            </Button>\n            <Button component={Link} to=\"/stock\" color=\"default\" raised>\n              Cancl\n            </Button>\n          </CardActions>\n        </Card>\n      </Form>\n    );\n  };\n\n  const showPreviewImage = (values) => {\n    if (values.file_obj) {\n      return <img src={values.file_obj} style={{ height: 100 }} />;\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      {/* Main content */}\n\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\n        <Formik\n          validate={(values) => {\n            let errors = {};\n            if (!values.name) errors.name = \"Enter name\";\n            if (!values.stock) errors.stock = \"Enter stock\";\n            if (!values.price) errors.price = \"Enter price\";\n            return errors;\n          }}\n          initialValues={{ name: \"\", stock: 10, price: 90 }}\n          onSubmit={(values, { setSubmitting }) => {\n            let formData = new FormData();\n            formData.append(\"name\", values.name);\n            formData.append(\"price\", values.price);\n            formData.append(\"stock\", values.stock);\n            formData.append(\"image\", values.file);\n            dispatch(stockActions.addProduct(formData, props.history));\n            setSubmitting(false);\n          }}\n        >\n          {(props) => showForm(props)}\n        </Formik>\n      </div>\n      {/* /.content */}\n    </Container>\n  );\n};\n","import * as stockActions from \"./../../../actions/stock.action\";\n\nimport React, { useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { imageUrl } from \"./../../../constants\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { Formik, Form, Field } from \"formik\";\n\nimport { TextField } from \"formik-material-ui\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Label } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"80%\",\n    marginTop: 100,\n  },\n  field: {\n    marginTop: 16,\n  },\n  card: {\n    padding: 20,\n  },\n}));\n\nexport default (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const stockReducer = useSelector(({ stockReducer }) => stockReducer);\n\n  useEffect(() => {\n    let id = props.match.params.id;\n    dispatch(stockActions.getProductById(id));\n  }, []);\n\n  const showForm = ({ values, setFieldValue }) => {\n    return (\n      <Form>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography gutterBottom variant=\"h3\">\n              Edit Product\n            </Typography>\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={() => <h3>Product ID# {values.product_id}</h3>}\n              name=\"product_id\"\n              type=\"text\"\n              label=\"Id\"\n            />\n            <br />\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"name\"\n              type=\"text\"\n              label=\"Name\"\n            />\n            <br />\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"price\"\n              type=\"number\"\n              label=\"Price\"\n            />\n\n            <Field\n              className={classes.field}\n              fullWidth\n              component={TextField}\n              name=\"stock\"\n              type=\"number\"\n              label=\"Stock\"\n            />\n\n            <div className={classes.field}>{showPreviewImage(values)}</div>\n\n            <div className={classes.field}>\n              <img\n                src={`${process.env.PUBLIC_URL}/images/ic_photo.png`}\n                style={{ width: 25, height: 20 }}\n              />\n              <span style={{ color: \"#00B0CD\", marginLeft: 10 }}>\n                Add Picture\n              </span>\n              <input\n                type=\"file\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setFieldValue(\"file\", e.target.files[0]); // for upload\n                  setFieldValue(\n                    \"file_obj\",\n                    URL.createObjectURL(e.target.files[0])\n                  ); // for preview image\n                }}\n                name=\"image\"\n                click-type=\"type1\"\n                className=\"picupload\"\n                multiple\n                accept=\"image/*\"\n                id=\"files\"\n                style={{ padding: \"20px 0\" }}\n              />\n            </div>\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Edit\n            </Button>\n            <Button component={Link} to=\"/stock\" color=\"default\" raised>\n              Cancl\n            </Button>\n          </CardActions>\n        </Card>\n      </Form>\n    );\n  };\n\n  const showPreviewImage = (values) => {\n    if (values.file_obj) {\n      return <img src={values.file_obj} style={{ height: 100 }} />;\n    } else if (values.image) {\n      return (\n        <img\n          src={`${imageUrl}/images/${values.image}`}\n          style={{ height: 100 }}\n        />\n      );\n    }\n  };\n\n  return (\n    <Container className={classes.root}>\n      {/* Main content */}\n      <div className=\"box-body\" style={{ marginTop: 30 }}>\n        <Formik\n          enableReinitialize\n          initialValues={\n            stockReducer.result\n              ? stockReducer.result\n              : { name: \"loading\", price: 0, stock: 0 }\n          }\n          onSubmit={(values, { setSubmitting }) => {\n            let formData = new FormData();\n            formData.append(\"product_id\", values.product_id);\n            formData.append(\"name\", values.name);\n            formData.append(\"price\", values.price);\n            formData.append(\"stock\", values.stock);\n            if (values.file) {\n              formData.append(\"image\", values.file);\n            }\n            dispatch(stockActions.updateProduct(formData, props.history));\n          }}\n        >\n          {(props) => showForm(props)}\n        </Formik>\n      </div>\n      {/* /.content */}\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Line, Bar, Pie } from \"react-chartjs-2\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, ButtonGroup, IconButton } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: 100,\n    backgroundColor: \"white\",\n    padding: 24,\n  },\n}));\n\nexport default () => {\n  const classes = useStyles();\n  const [chartType, setChartType] = useState(\"bar\");\n  const [chartData, setChartData] = useState([]);\n\n  const getRandomInt = () => {\n    let randoms = [];\n    for (let index = 0; index < 8; index++) {\n      randoms.push(Math.floor(Math.random() * (50000 - 5 + 1)) + 5);\n    }\n    return randoms;\n  };\n\n  const data = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n      {\n        label: \"Revenue 2018\",\n        fill: true,\n        lineTension: 0.1,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n          \"rgba(255, 99, 132, 0.2)\",\n        ],\n        borderColor: \"rgba(75,192,192,1)\",\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: \"rgba(75,192,192,1)\",\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chartData,\n      },\n    ],\n  };\n\n  const chartOption = {\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            callback: function (value, index, values) {\n              return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            },\n          },\n        },\n      ],\n    },\n  };\n\n  useEffect(() => {\n    setChartData(getRandomInt());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h1\">Sale Chart</Typography>\n      <ButtonGroup\n        size=\"large\"\n        color=\"primary\"\n        aria-label=\"large outlined primary button group\"\n      >\n        <Button\n          variant={chartType === \"line\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"line\")}\n        >\n          Line\n        </Button>\n        <Button\n          variant={chartType === \"bar\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"bar\")}\n        >\n          Bar\n        </Button>\n        <Button\n          variant={chartType === \"pie\" ? \"contained\" : \"outlined\"}\n          onClick={() => setChartType(\"pie\")}\n        >\n          Pie\n        </Button>\n      </ButtonGroup>\n      <IconButton\n        aria-label=\"refresh\"\n        onClick={() => {\n          setChartData(getRandomInt());\n        }}\n      >\n        <RefreshIcon />\n      </IconButton>\n      <div style={{ height: 500 }}>\n        {chartType === \"line\" && (\n          <Line data={data} width=\"100%\" height={50} options={chartOption} />\n        )}\n        {chartType === \"pie\" && (\n          <Pie data={data} width=\"100%\" height={50} options={chartOption} />\n        )}\n        {chartType === \"bar\" && (\n          <Bar data={data} width=\"100%\" height={50} options={chartOption} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { httpClient } from \"./../utils/HttpClient\";\n\nimport {\n  TRANSACTION_SUCCESS,\n  TRANSACTION_FETCHING,\n  TRANSACTION_FAILED,\n  server\n} from \"./../constants\";\n\nconst setStateTransactionToSuccess = payload => ({\n  type: TRANSACTION_SUCCESS,\n  payload: payload\n});\n\nconst setStateTransactionToFetching = () => ({\n  type: TRANSACTION_FETCHING\n});\n\nconst setStateTransactionToFailed = () => ({\n  type: TRANSACTION_FAILED\n});\n\nexport const getTransactions = () => {\n  setStateTransactionToFetching();\n  return dispatch => {\n    httpClient\n      .get(server.TRANSACTION_URL)\n      .then(result => {\n        dispatch(setStateTransactionToSuccess(result.data));\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(setStateTransactionToFailed());\n      });\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as transactionActions from \"./../../../actions/transaction.action\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Moment from \"react-moment\";\nimport NumberFormat from \"react-number-format\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport { imageUrl } from \"./../../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: 55,\n  },\n  star: {\n    color: \"red\",\n  },\n  orderList: {\n    overflowX: \"hidden\",\n    height: 490,\n    flex: 1,\n    width: \"100%\",\n    maxHeight: 490,\n  },\n  orderListItem: {\n    height: 100,\n    maxHeight: 100,\n  },\n  productContainer: {\n    height: 720,\n  },\n  paymentButton: {\n    height: 95,\n  },\n}));\n\nexport default (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [orderList, setorderList] = useState([]);\n\n  const transactionReducer = useSelector(\n    ({ transactionReducer }) => transactionReducer\n  );\n\n  useEffect(() => {\n    dispatch(transactionActions.getTransactions());\n  }, []);\n\n  const transactionColumns = [\n    {\n      title: \"ID\",\n      field: \"transaction_id\",\n    },\n\n    {\n      title: \"DATE\",\n      render: (item) => <Moment format=\"YYYY/MM/DD\">{item.timestamp}</Moment>,\n    },\n    {\n      title: \"TIME\",\n      render: (item) => <Moment format=\"HH:mm\">{item.timestamp}</Moment>,\n    },\n    {\n      title: \"STAFF\",\n      field: \"staff_id\",\n    },\n    {\n      title: \"TOTAL\",\n      render: (item) => (\n        <NumberFormat\n          value={item.total}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix={\"฿\"}\n        />\n      ),\n    },\n    {\n      title: \"PAID\",\n      render: (item) => (\n        <NumberFormat\n          value={item.paid}\n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix={\"฿\"}\n        />\n      ),\n    },\n    {\n      title: \"#SKU\",\n      render: (item) => (\n        <Typography>{JSON.parse(item.order_list).length} SKU</Typography>\n      ),\n    },\n    {\n      title: \"WAY\",\n      field: \"payment_type\",\n    },\n  ];\n\n  const orderColumns = [\n    {\n      title: \"ID\",\n      field: \"product_id\",\n      render: (item) => (\n        <Typography variant=\"body1\">{item.product_id}</Typography>\n      ),\n    },\n    {\n      title: \"IMAGE\",\n      field: \"image\",\n      cellStyle: { padding: 0 },\n      render: (item) => (\n        <img\n          src={`${imageUrl}/images/${item.image}?dummy=${Math.random()}`}\n          style={{ width: 80, height: 80, borderRadius: \"5%\" }}\n        />\n      ),\n    },\n    {\n      title: \"NAME\",\n      cellStyle: { minWidth: 400 },\n      field: \"name\",\n      render: (item) => <Typography variant=\"body1\">{item.name}</Typography>,\n    },\n    {\n      title: \"PRICE\",\n      field: \"price\",\n      render: (item) => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.price}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={2}\n            fixedDecimalScale={true}\n            prefix={\"฿\"}\n          />\n        </Typography>\n      ),\n    },\n    {\n      title: \"STOCK\",\n      field: \"stock\",\n      render: (item) => (\n        <Typography variant=\"body1\">\n          <NumberFormat\n            value={item.stock}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            decimalScale={0}\n            fixedDecimalScale={true}\n            suffix={\" pcs\"}\n          />\n        </Typography>\n      ),\n    },\n  ];\n\n  const clickTransactionRow = (data) => {\n    setSelectedRow(data);\n    setorderList(JSON.parse(data.order_list));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={7}>\n        <Grid item xs={6}>\n          <MaterialTable\n            id=\"root_stock\"\n            title=\"Stock\"\n            columns={transactionColumns}\n            data={transactionReducer.result ? transactionReducer.result : []}\n            onRowClick={(evt, data) => clickTransactionRow(data)}\n            options={{\n              pageSize: 10,\n              rowStyle: (rowData) => ({\n                backgroundColor:\n                  selectedRow &&\n                  selectedRow.tableData.id === rowData.tableData.id\n                    ? \"#EEE\"\n                    : \"#FFF\",\n              }),\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={6}>\n          <MaterialTable\n            title=\"Order List\"\n            columns={orderColumns}\n            data={orderList}\n            options={{\n              search: false,\n              paging: false,\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Header from \"./components/layouts/Header\";\nimport Menu from \"./components/layouts/Menu\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport LoginPage from \"./components/pages/LoginPage/LoginPage\";\nimport RegisterPage from \"./components/pages/RegisterPage/RegisterPage\";\nimport ShopPage from \"./components/pages/ShopPage/ShopPage\";\nimport StockPage from \"./components/pages/StockPage/StockPage\";\nimport StockCreatePage from \"./components/pages/StockCreatePage/StockCreatePage\";\nimport StockEditPage from \"./components/pages/StockEditPage/StockEditPage\";\nimport ReportPage from \"./components/pages/ReportPage/ReportPage\";\nimport TransactionPage from \"./components/pages/TransactionPage/TransactionPage\";\nimport * as loginActions from \"./actions/login.action\";\nimport { server } from \"./constants\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: theme.spacing(3),\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { 500: \"#1E88E5\" },\n  },\n  status: {\n    danger: \"orange\",\n  },\n});\n\nexport default function App() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const dispatch = useDispatch();\n  useSelector(({ loginReducer }) => loginReducer); // just mention in order to force refresh when login/logout\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // Protected Route\n  const SecuredRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={(props) =>\n        // ternary condition\n        loginActions.isLoggedIn() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n\n  const LoginRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={(props) =>\n        // ternary condition\n        loginActions.isLoggedIn() ? (\n          <Redirect to=\"/stock\" />\n        ) : (\n          <LoginPage {...props} />\n        )\n      }\n    />\n  );\n\n  return (\n    <Router\n      basename={process.env.REACT_APP_IS_PRODUCTION === \"1\" ? \"/demo\" : \"\"}\n    >\n      <Switch>\n        <ThemeProvider theme={theme}>\n          <div className={classes.root}>\n            <CssBaseline />\n            {/* Header */}\n            {loginActions.isLoggedIn() && (\n              <Header handleDrawerOpen={handleDrawerOpen} open={open} />\n            )}\n            {/* Menu */}\n            {loginActions.isLoggedIn() && (\n              <Menu handleDrawerClose={handleDrawerClose} open={open} />\n            )}\n            {/* Content */}\n            <Container className={classes.content} maxWidth={false}>\n              {/* <Route path=\"/login\" component={LoginPage} /> */}\n              <LoginRoute path=\"/login\" component={LoginPage} />\n              <Route path=\"/register\" component={RegisterPage} />\n              <SecuredRoute path=\"/stock\" exact={true} component={StockPage} />\n              <SecuredRoute path=\"/stock/create\" component={StockCreatePage} />\n              <SecuredRoute path=\"/stock/edit/:id\" component={StockEditPage} />\n              <SecuredRoute path=\"/shop\" component={ShopPage} />\n              <SecuredRoute path=\"/report\" component={ReportPage} />\n              <SecuredRoute path=\"/transaction\" component={TransactionPage} />\n\n              <Route\n                exact={true}\n                path=\"/\"\n                component={() => <Redirect to=\"/login\" />}\n              />\n            </Container>\n          </div>\n        </ThemeProvider>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  LOGIN_FETCHING,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n  LOGOUT,\n} from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  // Check if logged-in\n  switch (type) {\n    case LOGIN_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case LOGIN_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case LOGIN_FAILED:\n      return { ...state, result: payload, isFetching: false, isError: true };\n    case LOGOUT:\n      return { ...state, result: \"\", isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { REGISTER_FAILED, REGISTER_FETCHING, REGISTER_SUCCESS } from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REGISTER_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case REGISTER_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case REGISTER_FAILED:\n      return { ...state, result: payload, isFetching: false, isError: true };\n    default:\n      return state;\n  }\n};\n","import {\n  STOCK_SUCCESS,\n  STOCK_FETCHING,\n  STOCK_FAILED,\n  STOCK_CLEAR\n} from \"../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case STOCK_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    case STOCK_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case STOCK_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case STOCK_CLEAR:\n      return { ...state, result: null, isFetching: false, isError: false };\n    default:\n      return state;\n  }\n};\n","import { SHOP_UPDATE_ORDER, SHOP_UPDATE_PAYMENT } from \"../constants\";\n\nconst initialState = {\n  mOrderLines: [],\n  mTotalPrice: 0,\n  mTaxAmt: 0,\n  mIsPaymentMade: false,\n  mGiven: 0,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case SHOP_UPDATE_ORDER:\n      return {\n        ...state,\n        mOrderLines: payload.orderLines,\n        mTotalPrice: payload.totalPrice,\n        mTaxAmt: payload.taxAmt,\n      };\n    case SHOP_UPDATE_PAYMENT:\n      return {\n        ...state,\n        mIsPaymentMade: payload.isPaymentMade,\n        mGiven: payload.given,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  TRANSACTION_SUCCESS,\n  TRANSACTION_FETCHING,\n  TRANSACTION_FAILED\n} from \"./../constants\";\n\nconst initialState = {\n  result: null,\n  isFetching: false,\n  isError: false\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case TRANSACTION_SUCCESS:\n      return { ...state, result: payload, isFetching: false, isError: false };\n    case TRANSACTION_FAILED:\n      return { ...state, result: null, isFetching: false, isError: true };\n    case TRANSACTION_FETCHING:\n      return { ...state, result: null, isFetching: true, isError: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./login.reducer\";\nimport registerReducer from \"./register.reducer\";\nimport stockReducer from \"./stock.reducer\";\nimport shopReducer from \"./shop.reducer\";\nimport transactionReducer from \"./transaction.reducer\";\nexport default combineReducers({\n  loginReducer,\n  registerReducer,\n  stockReducer,\n  shopReducer,\n  transactionReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport logger from \"redux-logger\";\n\nvar middlewares = applyMiddleware(thunk, logger);\nconst store = createStore(reducers, middlewares);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}